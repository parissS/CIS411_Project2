@model IEnumerable<CIS411_Project.Core.Models.Books>
@{
    ViewBag.Title = "Home Page";
}

@section featured {
    <section class="featured">
        <div class="content-wrapper">
            <p>Testwwwww</p>
        </div>
    </section>
}

<h3>Navigate to /Articles</h3>
<p></p>
<h3>We suggest the following:</h3>
<ol class="round">
    <li class="one">
        <h5>Getting Started</h5>
        ASP.NET MVC gives you a powerful, patterns-based way to build dynamic websites that
        enables a clean separation of concerns and that gives you full control over markup
        for enjoyable, agile development. ASP.NET MVC includes many features that enable
        fast, TDD-friendly development for creating sophisticated applications that use
        the latest web standards.
        <a href="http://go.microsoft.com/fwlink/?LinkId=245151">Learn more…</a>
    </li>

    <li class="two">
        <h5>Add NuGet packages and jump-start your coding</h5>
        NuGet makes it easy to install and update free libraries and tools.
        <a href="http://go.microsoft.com/fwlink/?LinkId=245153">Learn more…</a>
    </li>

    <li class="three">
        <h5>Find Web Hosting</h5>
        You can easily find a web hosting company that offers the right mix of features
        and price for your applications.
        <a href="http://go.microsoft.com/fwlink/?LinkId=245157">Learn more…</a>
    </li>
</ol>

<table>
    <tr>
        <th>
            @Html.DisplayNameFor(model => model.BOOK_TITLE)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BOOK_EDITION)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BOOK_AUTHOR)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BOOK_PUBLISHER)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ISBN10)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.ISBN13)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CONDITION_ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.CATEGORY_ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.USER_ID)
        </th>
        <th>
            @Html.DisplayNameFor(model => model.BOOK_PRICE)
        </th>
        <th></th>
    </tr>
   
@if (Model != null)
{
 foreach (var item in Model) {
    <tr>
        <td>
            @Html.DisplayFor(modelItem => item.BOOK_ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BOOK_TITLE)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BOOK_DESC)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BOOK_AUTHOR)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BOOK_EDITION)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BOOK_PUBLISHER)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ISBN10)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.ISBN13)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CONDITION_ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.CATEGORY_ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.USER_ID)
        </td>
        <td>
            @Html.DisplayFor(modelItem => item.BOOK_PRICE)
        </td>
        <td>
            @Html.ActionLink("Edit", "Edit", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Details", "Details", new { /* id=item.PrimaryKey */ }) |
            @Html.ActionLink("Delete", "Delete", new { /* id=item.PrimaryKey */ })
        </td>
    </tr>
}
}
else
{
    ViewBag.Message = "No recent books added";
};
}

</table>